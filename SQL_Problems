## LC: Friend Requests I: Overall Acceptance Rate. https://leetcode.com/problems/friend-requests-i-overall-acceptance-rate/.
# Second follow-up.
SELECT
    dates.Date,
    ROUND(IFNULL(SUM(CASE WHEN counts.Type = 'Accept' THEN counts.Count ELSE 0 END) / 
    SUM(CASE WHEN counts.Type = 'Request' THEN counts.Count ELSE 0 END), 0.00), 2) AS 'accept_rate'
FROM
    (SELECT
        request_date AS 'Date'
    FROM
        FriendRequest
    UNION
    SELECT
        accept_date AS 'Date'
    FROM
        RequestAccepted) AS dates
    INNER JOIN
    (SELECT
        COUNT(DISTINCT sender_id, send_to_id) AS 'Count',
        request_date AS 'PrevDates',
        'Request' AS 'Type'
    FROM
        FriendRequest
    GROUP BY
        PrevDates
    UNION
    SELECT
        COUNT(DISTINCT requester_id, accepter_id) AS 'Count',
        accept_date AS 'PrevDates',
        'Accept' AS 'Type'
    FROM
        RequestAccepted
    GROUP BY
        PrevDates) AS counts
    ON
        dates.Date >= counts.PrevDates
GROUP BY
    dates.Date
ORDER BY
    dates.Date

## Taxi question.
SELECT Request_at 'Day', ROUND(COUNT(IF(Status != 'completed', True, NULL)) / COUNT(*), 2) 'Cancellation Rate'
FROM Trips, (
    SELECT Users_Id, Banned
    FROM Users
    WHERE Banned = 'Yes') AS ban
WHERE (Trips.Client_Id != ban.Users_Id) AND (Trips.Driver_id != ban.Users_Id)
    AND Request_at BETWEEN '2013-10-01' AND '2013-10-03'
GROUP BY Request_at

##
SELECT D.Name AS 'Department', E.Name AS 'Employee', E.Salary
FROM Employee AS E, Department AS D, (
    SELECT Salary
    FROM Employee
    GROUP BY DepartmentId
    ORDER BY Salary DESC) AS T
WHERE E.Salary = T.Salary AND D.Id = E.DepartmentId

## HR: The Report. https://www.hackerrank.com/challenges/the-report/problem. Date: 4/19/21.
SELECT CASE
    WHEN Grades.Grade < 8 THEN NULL
    ELSE Students.Name
    END,
    Grades.Grade, Students.Marks
FROM Students
INNER JOIN Grades
    ON Students.Marks BETWEEN Min_Mark AND Max_Mark
ORDER BY Grades.Grade DESC, Students.Name ASC, Students.Marks ASC
